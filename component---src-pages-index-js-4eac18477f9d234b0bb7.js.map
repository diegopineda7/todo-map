{"version":3,"sources":["webpack:///./src/components/addForm.js","webpack:///./src/components/todo.js","webpack:///./src/components/todoList.js","webpack:///./src/pages/index.js"],"names":["AddForm","useState","newTodo","setNewTodo","inputRef","createRef","myPosition","useSelector","state","location","dispatch","useDispatch","useEffect","current","focus","onSubmit","e","preventDefault","type","data","id","Math","ceil","random","name","update","text","lat","lng","value","ref","onChange","target","style","padding","marginBottom","marginRight","required","borderRadius","background","color","cursor","ToDo","todo","editing","setEditing","newName","setNewName","hideEditInput","buttonStyle","backgroundColor","border","display","justifyContent","flexDirection","gap","onClick","alignItems","ToDoList","renderTodos","todos","filter","done","length","map","key","IndexPage","title"],"mappings":"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","file":"component---src-pages-index-js-4eac18477f9d234b0bb7.js","sourcesContent":["import React, { createRef, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst AddForm = () => {\r\n  const [newTodo, setNewTodo] = useState()\r\n  const inputRef = createRef()\r\n\r\n  const myPosition = useSelector(state => state.location)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const focusInput = () => {\r\n      inputRef.current.focus()\r\n    }\r\n    focusInput()\r\n  }, [])\r\n\r\n  const handleChange = e => {\r\n    setNewTodo(e.target.value)\r\n  }\r\n\r\n  const saveTodo = e => {\r\n    e.preventDefault()\r\n    dispatch({\r\n      type: 'ADD',\r\n      data: {\r\n        id: Math.ceil(Math.random() * 1000),\r\n        name: newTodo,\r\n        update: {\r\n          text: 'created',\r\n          lat: myPosition.lat,\r\n          lng: myPosition.lng\r\n        }\r\n      }\r\n    })\r\n    setNewTodo('')\r\n    inputRef.current.focus()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={saveTodo}>\r\n      <input\r\n        type='text'\r\n        value={newTodo}\r\n        ref={inputRef}\r\n        onChange={handleChange}\r\n        style={{\r\n          padding: '5px 10px',\r\n          marginBottom: 25,\r\n          marginRight: 15\r\n        }}\r\n        required\r\n      />\r\n      <button\r\n        type='submit'\r\n        style={{\r\n          padding: '5px 25px',\r\n          borderRadius: 15,\r\n          background: 'darkblue',\r\n          color: '#fff',\r\n          cursor: 'pointer'\r\n        }}\r\n      >Add it!</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddForm\r\n","import React, { createRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst ToDo = ({ todo }) => {\r\n  const { id, name } = todo\r\n  const [editing, setEditing] = useState(false)\r\n  const [newName, setNewName] = useState(name)\r\n  const myPosition = useSelector(state => state.location)\r\n\r\n  const inputRef = createRef()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const editTodo = e => {\r\n    e.preventDefault()\r\n    dispatch({\r\n      type: 'EDIT',\r\n      data: {\r\n        id,\r\n        newName,\r\n        update: {\r\n          text: 'modified',\r\n          lat: myPosition.lat,\r\n          lng: myPosition.lng\r\n        }\r\n      }\r\n    })\r\n    hideEditInput()\r\n    setNewName(newName)\r\n  }\r\n\r\n  const done = () => {\r\n    dispatch({\r\n      type: 'DONE',\r\n      data: {\r\n        id: todo.id,\r\n        update: {\r\n          text: 'completed',\r\n          lat: myPosition.lat,\r\n          lng: myPosition.lng\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const showEditInput = () => {\r\n    setEditing(true)\r\n  }\r\n\r\n  const hideEditInput = () => {\r\n    setEditing(false)\r\n    setNewName(name)\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setNewName(e.target.value)\r\n  }\r\n\r\n  const buttonStyle = {\r\n    backgroundColor: '#fff',\r\n    border: 'none',\r\n    borderRadius: 15,\r\n    padding: 8\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: 'darkblue',\r\n      marginBottom: 5,\r\n      color: 'white',\r\n      padding: 15,\r\n      borderRadius: 15,\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n    }}>\r\n      <div>\r\n        {\r\n          editing\r\n            ? <form\r\n              onSubmit={editTodo}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: 15\r\n              }}\r\n            >\r\n              <input\r\n                type='text'\r\n                value={newName}\r\n                ref={inputRef}\r\n                onChange={handleChange}\r\n                style={{\r\n                  padding: '5px 10px',\r\n                }}\r\n                required\r\n              />\r\n              <div style={{\r\n                display: 'flex',\r\n                gap: 15\r\n              }}>\r\n                <button\r\n                  type='submit'\r\n                  style={buttonStyle}\r\n                >\r\n                  Save\r\n                  </button>\r\n                <button\r\n                  onClick={hideEditInput}\r\n                  style={buttonStyle}\r\n                >\r\n                  Cancel\r\n                  </button>\r\n              </div>\r\n            </form>\r\n            : name\r\n        }\r\n      </div>\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: 15\r\n      }}>\r\n        <button\r\n          onClick={showEditInput}\r\n          style={buttonStyle}\r\n        >\r\n          Edit\r\n          </button>\r\n        <button\r\n          onClick={done}\r\n          style={buttonStyle}\r\n        >\r\n          Done\r\n          </button>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ToDo\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ToDo from './todo'\r\n\r\nconst ToDoList = () => {\r\n  const todos = useSelector(state => state.todos)\r\n  const renderTodos = todos.filter(todo => !todo.done)\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        renderTodos.length\r\n          ? renderTodos.map(todo => (\r\n            <ToDo\r\n              todo={todo}\r\n              key={todo.id}\r\n            />\r\n          ))\r\n          : <h2>You have no ToDo's.</h2>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToDoList\r\n","import React from \"react\"\r\nimport AddForm from \"../components/addForm\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport ToDoList from \"../components/todoList\"\r\n\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <AddForm />\r\n    <ToDoList />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}